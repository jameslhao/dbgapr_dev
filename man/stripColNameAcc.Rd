% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/commons_internal.R
\docType{methods}
\name{stripColNameAcc}
\alias{stripColNameAcc}
\alias{stripColNameAcc,Commons,character-method}
\title{(internal) Remove accession from concatenated string of variable name and accession}
\usage{
stripColNameAcc(object, colNameAccList)

\S4method{stripColNameAcc}{Commons,character}(object, colNameAccList)
}
\arguments{
\item{object}{Commons class object.}

\item{colNameAccList}{a character vector. A concatenated string of the variable name and accession, such as c('AGEPHOT_phv00000027.v2', 'LNUCSCORE_phv00053747.v2', 'LNUCSCORE_phv00000006.v2', 'DIABAGE_phv00054122.v1').}
}
\value{
a character vector. Variable names with the accessions removed.
}
\description{
The method takes a list of concatenated string of variable name and accession, removes the variable accession from each of the string (e.g. AGEPHOT_phv00000027.v2 --> AGEPHOT). After the removal, if there are duplicated items in the list, a .number is appended to each of the repeated items to make the ditinction. For example, the duplicated items LNUCSCORE_phv00053747.v2, LNUCSCORE_phv00000006.v2 become LNUCSCORE.1, LNUCSCORE.2 .
}
\section{Methods (by class)}{
\itemize{
\item \code{object = Commons,colNameAccList = character}: 
}}

\examples{
\dontrun{

c <- Commons()
names <- c('AGEPHOT_phv00000027.v2', 'LNUCSCORE_phv00053747.v2')
stripColNameAcc(c, colNameAccList =  names)) 
}
}
\keyword{internal}
